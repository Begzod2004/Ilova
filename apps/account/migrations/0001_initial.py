# Generated by Django 4.1.3 on 2022-12-07 05:50

import apps.account.managers
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ForCheckModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Faqat o'zbek raqamlarigina tasdiqlanadi", regex='^998[0-9]{2}[0-9]{7}$')], verbose_name='Telefon raqam')),
                ('code', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='SMSClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=10000, null=True)),
            ],
            options={
                'db_table': 'Smsclient',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email address')),
                ('phone', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Faqat o'zbek raqamlarigina tasdiqlanadi", regex='^998[0-9]{2}[0-9]{7}$')], verbose_name='Telefon raqam')),
                ('full_name', models.CharField(max_length=50, null=True, verbose_name='Full name')),
                ('image', models.ImageField(blank=True, null=True, upload_to='accounts/', verbose_name='Account image')),
                ('role', models.CharField(choices=[('director', 'director'), ('manager', 'manager'), ('simpleuser', 'simpleuser')], default='simpleuser', max_length=20)),
                ('activ_code', models.CharField(blank=True, max_length=5, null=True)),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='Date modified')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
            },
            managers=[
                ('objects', apps.account.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.account',),
            managers=[
                ('objects', apps.account.managers.DirectorsManager()),
            ],
        ),
        migrations.CreateModel(
            name='SimpleUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.account',),
            managers=[
                ('objects', apps.account.managers.SimpleUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('account.account',),
            managers=[
                ('objects', apps.account.managers.StaffManager()),
            ],
        ),
    ]
